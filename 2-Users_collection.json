{
	"info": {
		"_postman_id": "881f82f4-b0ec-44f6-9ef7-30ef134622f2",
		"name": "2-Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33302428",
		"_collection_link": "https://convergentes-276560.postman.co/workspace/convergentes-academy-api-postma~f40f487e-2cf7-405b-b114-11e932dc6105/collection/33302428-881f82f4-b0ec-44f6-9ef7-30ef134622f2?action=share&source=collection_link&creator=33302428"
	},
	"item": [
		{
			"name": "cadastro - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro com sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cadastro - não funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "fullName vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\" + pm.variables.replaceIn(\"{{$guid}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'fullName' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo nome completo é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "fullName com números",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\" + pm.variables.replaceIn(\"{{$guid}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'fullName' não deve conter números.\", function () {\r",
									"    pm.expect(\"O campo nome completo não deve conter números\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"123\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "fullName com mais de 100 caracteres",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\" + pm.variables.replaceIn(\"{{$guid}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'fullName' com mais de 100 caracteres.\", function () {\r",
									"    pm.expect(\"O nome completo deve ter no máximo 100 caracteres.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"Iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii Iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "fullName campo inválido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\" + pm.variables.replaceIn(\"{{$guid}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'fullName' com nome inválido.\", function () {\r",
									"    pm.expect(\"Informe o nome e sobrenome com as iniciais em letra maiúscula e sem caracteres especiais.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"Teste\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "mail vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'mail' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo e-mail é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "mail campo inválido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: campo 'mail' inválido.\", function () {\r",
									"    pm.expect(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"testegmail.com\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "senha vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'password' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo senha é obrigatório\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "senhas incongruentes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: Senhas não coincidem\", function () {\r",
									"    pm.expect(\"As senhas não coincidem.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"Teste\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "accessProfile vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'accessProfile' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo perfil de acesso é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "accessProfile campo inválido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'accessProfile' deve ser somente 'ADMIN'.\", function () {\r",
									"    pm.expect(\"O campo perfil de acesso deve ser preenchido de acordo com o seu cargo exemplo: ADMIN.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADM\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "cpf vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function cpf() {\r",
									"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
									"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
									" \r",
									"    let sum = 0\r",
									"    for (let i = 10; i > 1; i--) {\r",
									"        sum += cpfDigits[ 10 - i ] * i\r",
									"    }\r",
									" \r",
									"    const firstVerifierDigits = (sum * 10) % 11\r",
									"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
									" \r",
									"    sum = 0\r",
									"    for (let i = 11; i > 1; i--) {\r",
									"        sum += cpfDigits[11 - i] * i\r",
									"    }\r",
									" \r",
									"    const secondVerifierDigits = (sum * 10) % 11\r",
									"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
									" \r",
									"    return cpfDigits.join('')\r",
									"}\r",
									"pm.environment.set(\"CPFUser\", cpf())\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'cpf' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo CPF é obrigatório!\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "cpf diferente de 11 caracteres",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function cpf() {\r",
									"    const randomDigit = () => Math.floor(Math.random() * 10)\r",
									"    const cpfDigits = Array.from({length: 9 }, randomDigit)\r",
									" \r",
									"    let sum = 0\r",
									"    for (let i = 10; i > 1; i--) {\r",
									"        sum += cpfDigits[ 10 - i ] * i\r",
									"    }\r",
									" \r",
									"    const firstVerifierDigits = (sum * 10) % 11\r",
									"    cpfDigits.push(firstVerifierDigits === 10 ? 0 : firstVerifierDigits)\r",
									" \r",
									"    sum = 0\r",
									"    for (let i = 11; i > 1; i--) {\r",
									"        sum += cpfDigits[11 - i] * i\r",
									"    }\r",
									" \r",
									"    const secondVerifierDigits = (sum * 10) % 11\r",
									"    cpfDigits.push(secondVerifierDigits === 10 ? 0 : secondVerifierDigits)\r",
									" \r",
									"    return cpfDigits.join('')\r",
									"}\r",
									"pm.environment.set(\"CPFUser\", cpf())\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'cpf' diferente de 11 dígitos.\", function () {\r",
									"    pm.expect(\"Deve preencher o CPF com 11 dígitos\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"123456789101\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "confirmPassword vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'confirmPassword' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo de confirmação de senha é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "editar dados - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "login user - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar dados usuário - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).updatedUser.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).updatedUser.mail);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "editar dados - não funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "login user - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar dados - fullName vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'fullName' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo nome completo é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"{{Email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{idUser}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar dados - mail vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'fullName' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo e-mail é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "editar senha - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "login user - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar senha - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: Senha atualizada com sucesso!\", function () {\r",
									"    pm.expect(\"Senha atualizada com sucesso!\").to.eql(JSON.parse(responseBody).msg);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"NewPass@123\",\r\n  \"confirmPassword\": \"NewPass@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/password/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "editar senha - não funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "login user - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar senha - password vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randomPass\", (\"Tst@\") + pm.variables.replaceIn(\"{{$randomCreditCardMask}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'password' é obrigatório.\", function () {\r",
									"    pm.expect(\"Campo senha é obrigatório\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"\",\r\n  \"confirmPassword\": \"{{$randomPass}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/password/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{idUser}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar senha - confirmPassword vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randomPass\", (\"Tst@\") + pm.variables.replaceIn(\"{{$randomCreditCardMask}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: O campo 'confirmPassword' é obrigatório.\", function () {\r",
									"    pm.expect(\"O campo de confirmação de senha é obrigatório.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{randomPass}}\",\r\n  \"confirmPassword\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/password/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{idUser}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar senha - passwords incongruentes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randomPass\", (\"Tst@\") + pm.variables.replaceIn(\"{{$randomCreditCardMask}}\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: As senhas não coincidem.\", function () {\r",
									"    pm.expect(\"As senhas não coincidem.\").to.eql(JSON.parse(responseBody).error[0]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"confirmPassword\": \"{{randomPass}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/password/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "atualizar status - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "inativar status - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: Status 'false' atualizado com sucesso\", function () {\r",
									"    pm.expect(\"Status do usuario atualizado com sucesso para status false.\").to.eql(JSON.parse(responseBody).msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/status/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"status",
								"{{idUser}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ativar status - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: Status 'true' atualizado com sucesso\", function () {\r",
									"    pm.expect(\"Status do usuario atualizado com sucesso para status true.\").to.eql(JSON.parse(responseBody).msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/status/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"status",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "listar usuários - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar usuários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "listar id usuário - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "listar id usuário - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check id is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"idUser\")).to.eql(JSON.parse(responseBody)._id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "contar usuários - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "contar usuários - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Count Total\", () => {\r",
									"    pm.environment.set(\"Count\", JSON.parse(responseBody).count);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/count",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"count"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deletar usuário - funcional",
			"item": [
				{
					"name": "login admin - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set('Token', pm.response.json().token)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro - sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"\r",
									"    let firstName = [\"Lidy\", \"Ravi\", \"Luciana\", \"Silvana\", \"Elias\", \"Patricia\", \"Kaiky\", \"Barbara\", \"Bernardo\", \"Sergio\", \"Pietro\", \"Carlos\", \"Pedro\", \"Lucas\"];\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName())\r",
									"\r",
									"function lastName() {\r",
									"\r",
									"    let lastName = [\"Rodrigues Silva\", \"Alves Silva\", \"Lazaro Silva\", \"Bastos Silva\", \"Silva\", \"Souza\", \"Costa Silva\", \"Santos\", \"Carvalho\", \"Monteiro\", \"Torres\", \"Cardoso\", \"Mendes\"];\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"\r",
									"    let providerMail = [\"@yahoo.com.br\", \"@gmail.com\", \"@uol.com.br\", \"@outlook.com\", \"@hotmail.com\"];\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"\r",
									"pm.environment.set(\"Email\", pm.environment.get(\"FirstName\") + \".\" + pm.variables.replaceIn(\"{{$timestamp}}\") + pm.environment.get(\"ProviderMail\"));\r",
									"\r",
									"\r",
									"function generateCPF() {\r",
									"  let cpf = '';\r",
									"  for (let i = 0; i < 11; i++) {\r",
									"    cpf += Math.floor(Math.random() * 10);\r",
									"  }\r",
									"  return cpf;\r",
									"}\r",
									"pm.environment.set(\"cpf\", generateCPF())\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"check fullName is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName);\r",
									"});\r",
									"pm.test(\"check mail is true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Email\")).to.eql(JSON.parse(responseBody).user.mail);\r",
									"});\r",
									"pm.test(\"check accessProfile is true\", function () {\r",
									"    pm.expect(\"ADMIN\").to.eql(JSON.parse(responseBody).user.accessProfile);\r",
									"});\r",
									"pm.test(\"check Status true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status);\r",
									"});\r",
									"\r",
									"pm.environment.set('idUser', pm.response.json().user._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{cpf}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletar usuário - sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check msg: Usuário deletado com sucesso\", function () {\r",
									"    pm.expect(\"Usuário deletado com sucesso!.\").to.eql(JSON.parse(responseBody).msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{Token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/{{idUser}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{idUser}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}